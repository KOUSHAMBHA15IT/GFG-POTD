class Solution {
  public:
   vector<vector<int>> mergeOverlap(vector<vector<int>>& arr) {
        vector<vector<int>> ans;

        // Sort intervals based on the start time
        sort(arr.begin(), arr.end(), [](const vector<int>& a, const vector<int>& b) {
            return a[0] < b[0];
        });

        int start = arr[0][0], end = arr[0][1];

        for (int i = 1; i < arr.size(); i++) {
            if (arr[i][0] <= end) {
                end = max(end, arr[i][1]);
            } else {
                ans.push_back({start, end});
                start = arr[i][0];
                end = arr[i][1];
            }
        }

        ans.push_back({start, end});

        return ans;
    }
};